{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Marker",
  "scopeName": "source.marker",
  "patterns": [
    {
      "include": "#block-comments"
    },
    {
      "include": "#standalone-comment"
    },
    {
      "include": "#type-definition"
    },
    {
      "include": "#procedure-definition"
    },
    {
      "include": "#return-python-block"
    },
    {
      "include": "#assignment-python-block"
    },
    {
      "include": "#return-statement"
    },
    {
      "include": "#assignment"
    },
    {
      "include": "#python-block"
    },
    {
      "include": "#template-line"
    }
  ],
  "repository": {
    "block-comments": {
      "patterns": [
        {
          "begin": "^\\s*(###)\\s*$",
          "end": "^\\s*(###)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "comment.block.marker"
            }
          },
          "endCaptures": {
            "1": {
              "name": "comment.block.marker"
            }
          },
          "contentName": "comment.block.marker"
        }
      ]
    },
    "standalone-comment": {
      "patterns": [
        {
          "match": "^\\s*(?<!#)(#)(?!#).*",
          "name": "comment.line.number-sign.marker",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.marker"
            }
          }
        }
      ]
    },
    "type-definition": {
      "patterns": [
        {
          "begin": "^\\s*(~)([A-Za-z_][A-Za-z0-9_]*)",
          "end": "$",
          "beginCaptures": {
            "1": { "name": "keyword.operator.tilde.marker" },
            "2": { "name": "entity.name.type.marker" }
          },
          "patterns": [
            {
              "begin": "\\(",
              "end": "\\)",
              "beginCaptures": {
                "0": { "name": "punctuation.section.parameters.begin.marker" }
              },
              "endCaptures": {
                "0": { "name": "punctuation.section.parameters.end.marker" }
              },
              "patterns": [
                { "include": "#type-fields" },
                { "include": "#inline-comment" }
              ]
            },
            { "include": "#inline-comment" }
          ],
          "name": "meta.type.definition.marker"
        }
      ]
    },
    "type-fields": {
      "patterns": [
        {
          "match": "([A-Za-z_][A-Za-z0-9_]*)\\s*(:)\\s*([A-Za-z_][A-Za-z0-9_\\[\\]]*)",
          "captures": {
            "1": {
              "name": "variable.other.field.marker"
            },
            "2": {
              "name": "punctuation.separator.marker"
            },
            "3": {
              "name": "storage.type.marker"
            }
          }
        },
        {
          "match": "([A-Za-z_][A-Za-z0-9_]*)",
          "name": "variable.other.field.marker"
        },
        {
          "match": ",",
          "name": "punctuation.separator.parameters.marker"
        },
        {
          "include": "#inline-comment"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "(?<!#)(#)(?!#).*$",
          "name": "comment.line.number-sign.marker",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.marker"
            }
          }
        }
      ]
    },
    "procedure-definition": {
      "patterns": [
        {
          "begin": "^\\s*(@)([A-Za-z_][A-Za-z0-9_]*)",
          "end": "$",
          "beginCaptures": {
            "1": { "name": "keyword.operator.marker" },
            "2": { "name": "entity.name.function.marker" }
          },
          "name": "meta.procedure.definition.marker",
          "patterns": [
            {
              "begin": "\\(",
              "end": "\\)",
              "beginCaptures": {
                "0": { "name": "punctuation.section.parameters.begin.marker" }
              },
              "endCaptures": {
                "0": { "name": "punctuation.section.parameters.end.marker" }
              },
              "patterns": [
                { "include": "#parameters" }
              ]
            },
            {
              "match": "\\s*(->)\\s*([A-Za-z_][A-Za-z0-9_\\[\\]]*)?",
              "captures": {
                "1": { "name": "keyword.operator.arrow.marker" },
                "2": { "name": "storage.type.marker" }
              }
            },
            {
              "match": "\\s*(:)",
              "captures": {
                "1": { "name": "punctuation.section.procedure.marker" }
              }
            },
            { "include": "#inline-comment" }
          ]
        }
      ]
    },
    "parameters": {
      "patterns": [
        {
          "match": "([A-Za-z_][A-Za-z0-9_]*)\\s*(:)\\s*([A-Za-z_][A-Za-z0-9_\\[\\]]*)",
          "captures": {
            "1": {
              "name": "variable.parameter.marker"
            },
            "2": {
              "name": "punctuation.separator.marker"
            },
            "3": {
              "name": "storage.type.marker"
            }
          }
        },
        {
          "match": "([A-Za-z_][A-Za-z0-9_]*)",
          "name": "variable.parameter.marker"
        },
        {
          "match": ",",
          "name": "punctuation.separator.parameters.marker"
        }
      ]
    },
    "return-python-block": {
      "patterns": [
        {
          "begin": "^\\s*(=)\\s*(```)\\s*$",
          "end": "^\\s*(```)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.return.marker"
            },
            "2": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "contentName": "source.python.embedded.block.marker",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        }
      ]
    },
    "assignment-python-block": {
      "patterns": [
        {
          "begin": "^\\s*(\\[)([A-Za-z_][A-Za-z0-9_]*)\\s*(:)?\\s*([A-Za-z_][A-Za-z0-9_\\[\\]]*)?\\s*(\\])\\s*(=)\\s*(```)\\s*$",
          "end": "^\\s*(```)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.variable.begin.marker"
            },
            "2": {
              "name": "variable.other.assignment.marker"
            },
            "3": {
              "name": "punctuation.separator.marker"
            },
            "4": {
              "name": "storage.type.marker"
            },
            "5": {
              "name": "punctuation.definition.variable.end.marker"
            },
            "6": {
              "name": "keyword.operator.assignment.marker"
            },
            "7": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "contentName": "source.python.embedded.block.marker",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        }
      ]
    },
    "return-statement": {
      "patterns": [
        {
          "begin": "^\\s*(=)(?!=)",
          "end": "$",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.return.marker"
            }
          },
          "patterns": [
            {
              "include": "#expression-contents-no-output"
            },
            {
              "include": "#inline-comment"
            }
          ]
        }
      ]
    },
    "assignment": {
      "patterns": [
        {
          "begin": "^\\s*(\\[)([A-Za-z_][A-Za-z0-9_]*)\\s*(:)?\\s*([A-Za-z_][A-Za-z0-9_\\[\\]]*)?\\s*(\\])\\s*(=)(?!=)",
          "end": "$",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.variable.marker"
            },
            "2": {
              "name": "variable.other.assignment.marker"
            },
            "3": {
              "name": "punctuation.separator.marker"
            },
            "4": {
              "name": "storage.type.marker"
            },
            "5": {
              "name": "punctuation.definition.variable.marker"
            },
            "6": {
              "name": "keyword.operator.assignment.marker"
            }
          },
          "patterns": [
            {
              "include": "#expression-contents-no-output"
            },
            {
              "include": "#inline-comment"
            }
          ]
        }
      ]
    },
    "python-block": {
      "patterns": [
        {
          "begin": "^\\s*(```)\\s*$",
          "end": "^\\s*(```)\\s*$",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "contentName": "source.python.embedded.block.marker",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        }
      ]
    },
    "template-line": {
      "patterns": [
        {
          "match": "^(?!\\s*[@#=]|\\s*\\[[^]]*\\]\\s*=|\\s*```|\\s*$)(.+)$",
          "captures": {
            "1": {
              "patterns": [
                { "include": "#inline-comment" },
                { "include": "#template-contents" }
              ]
            }
          }
        }
      ]
    },
    "expression-contents": {
      "patterns": [
        { "include": "#escaped-chars" },
        {
          "include": "#inline-python"
        },
        {
          "include": "#substitution"
        },
        {
          "include": "#output"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#inline-comment"
        }
      ]
    },
    "expression-contents-no-output": {
      "patterns": [
        { "include": "#escaped-chars" },
        {
          "include": "#inline-python"
        },
        {
          "include": "#substitution"
        },
        {
          "include": "#output"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#inline-comment"
        },
        {
          "match": "[^#<`\\[\\]@=,>\\\\]+",
          "name": "string.unquoted.marker"
        }
      ]
    },
    "template-contents": {
      "patterns": [
        { "include": "#escaped-chars" },
        {
          "include": "#inline-python"
        },
        {
          "include": "#substitution"
        },
        {
          "include": "#output"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#inline-comment"
        },
        {
          "match": "[^#<`\\[\\]@=,>\\\\]+",
          "name": "string.unquoted.marker"
        }
      ]
    },
    "inline-python": {
      "patterns": [
        {
          "begin": "(<)(`)",
          "end": "(`)(>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.variable.begin.marker"
            },
            "2": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.code.marker"
            },
            "2": {
              "name": "punctuation.definition.variable.end.marker"
            }
          },
          "contentName": "source.python.embedded.inline.marker",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        },
        {
          "begin": "(`)",
          "end": "(`)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "name": "meta.embedded.inline.python.marker",
          "contentName": "source.python.embedded.inline.marker",
          "patterns": [
            {
              "include": "source.python"
            }
          ]
        }
      ]
    },
    "substitution": {
      "patterns": [
        {
          "begin": "(<)(?!<)([A-Za-z_][A-Za-z0-9_]*)\\s*(\\()",
          "end": "(\\))(>)(?!>)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.variable.begin.marker"
            },
            "2": {
              "name": "entity.name.function.call.marker"
            },
            "3": {
              "name": "punctuation.section.arguments.begin.marker"
            }
          },
          "endCaptures": {
            "1": {
              "name": "punctuation.section.arguments.end.marker"
            },
            "2": {
              "name": "punctuation.definition.variable.end.marker"
            }
          },
          "patterns": [
            {
              "include": "#call-arguments"
            }
          ]
        },
        {
          "match": "(<)(?!<)([A-Za-z_][A-Za-z0-9_]*)(>)(?!>)",
          "captures": {
            "1": {
              "name": "punctuation.definition.variable.begin.marker"
            },
            "2": {
              "name": "variable.other.readwrite.marker"
            },
            "3": {
              "name": "punctuation.definition.variable.end.marker"
            }
          }
        }
      ]
    },
    "call-arguments": {
      "patterns": [
        {
          "begin": "`",
          "end": "`",
          "name": "meta.embedded.argument.python",
          "contentName": "source.python.embedded.arg.marker",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.code.marker"
            }
          },
          "patterns": [
            { "include": "source.python" }
          ]
        },
        { "include": "#escaped-chars" },
        { "include": "#inline-python" },
        { "include": "#substitution" },
        { "include": "#strings" },
        { "match": ",,", "name": "constant.character.escape.marker" },
        { "match": ",", "name": "punctuation.separator.arguments.marker" },
        {
          "match": "[^,<>`\\n\\r\\[\\]\\)]+",
          "name": "string.unquoted.argument.marker"
        }
      ]
    },
    "output": {
      "patterns": [
        {
          "match": "(\\[)(?!\\[)([A-Za-z_][A-Za-z0-9_]*)\\s*(:)\\s*([A-Za-z_][A-Za-z0-9_\\[\\]]*)(\\])(?!\\])",
          "captures": {
            "1": {
              "name": "punctuation.definition.variable.begin.marker"
            },
            "2": {
              "name": "variable.other.output.marker"
            },
            "3": {
              "name": "punctuation.separator.marker"
            },
            "4": {
              "name": "storage.type.marker"
            },
            "5": {
              "name": "punctuation.definition.variable.end.marker"
            }
          }
        },
        {
          "match": "(\\[)(?!\\[)([A-Za-z_][A-Za-z0-9_]*)(\\])(?!\\])",
          "captures": {
            "1": {
              "name": "punctuation.definition.variable.begin.marker"
            },
            "2": {
              "name": "variable.other.output.marker"
            },
            "3": {
              "name": "punctuation.definition.variable.end.marker"
            }
          }
        }
      ]
    },
    "escaped-chars": {
      "patterns": [
        {
          "match": "<<|>>|\\[\\[|\\]\\]|==|@@|,,|\\\\\\\\",
          "name": "constant.character.escape.marker"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.marker",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.marker",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.marker",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.marker",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "inline-comment": {
      "patterns": [
        {
          "match": "(?<!#)(#)(?!#).*?$",
          "name": "comment.line.number-sign.marker",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.marker"
            }
          }
        }
      ]
    }
  }
}